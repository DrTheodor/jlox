plugins {
    id 'java'
}

group 'eu.jameshamilton'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    fatJar
}

dependencies {
    implementation "com.guardsquare:proguard-core:9.0.3"
    implementation project(":runtime")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}


java {
    sourceSets.main.java.srcDirs += ["${craftinginterpreters}/java"]
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(20))
    }

    tasks.withType(JavaCompile) {
        //options.compilerArgs += "--enable-preview"
    }
    tasks.withType(JavaExec) {
        //jvmArgs += "--enable-preview"
    }
}

task fatJar(type: Jar) {
    dependsOn configurations.runtimeClasspath

    archiveFileName = "jlox.jar"
    manifest {
        attributes 'Main-Class': 'com.craftinginterpreters.lox.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task copyJar(type: Copy) {
    from tasks.fatJar
    into "$rootDir/lib"
}

def compiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(20)
}


task craftingInterpretersTest(type: Exec) {
    dependsOn copyJar
    workingDir craftinginterpreters
    environment "JAVA_HOME", compiler.get().metadata.installationPath
    commandLine "dart", "tool/bin/test.dart", "jlox", "-i", "${rootDir.absolutePath}/bin/jlox"
}

test {
    dependsOn craftingInterpretersTest
    useJUnitPlatform()
}
